// ******************************************************************************************************
// Copyright 2022 Mapped Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ******************************************************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: mapped/cloud/api/control/control.proto

package control

import (
	types "go.mapped.dev/pb/cloud/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WritePropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The property value(s) to write
	Payload *PointReferenceAndValue `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// Simulate the command by only validating the input and logging
	// do not send an actual command over the wire
	Simulate bool `protobuf:"varint,100,opt,name=simulate,proto3" json:"simulate,omitempty"`
}

func (x *WritePropRequest) Reset() {
	*x = WritePropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapped_cloud_api_control_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePropRequest) ProtoMessage() {}

func (x *WritePropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapped_cloud_api_control_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePropRequest.ProtoReflect.Descriptor instead.
func (*WritePropRequest) Descriptor() ([]byte, []int) {
	return file_mapped_cloud_api_control_control_proto_rawDescGZIP(), []int{0}
}

func (x *WritePropRequest) GetPayload() *PointReferenceAndValue {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WritePropRequest) GetSimulate() bool {
	if x != nil {
		return x.Simulate
	}
	return false
}

type WritePropResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID of this request to be provided to Mapped Support
	// for troubleshooting in the case of unexpected errors
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The result of each property write
	Payload *PointReferenceAndResult `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WritePropResponse) Reset() {
	*x = WritePropResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapped_cloud_api_control_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePropResponse) ProtoMessage() {}

func (x *WritePropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapped_cloud_api_control_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePropResponse.ProtoReflect.Descriptor instead.
func (*WritePropResponse) Descriptor() ([]byte, []int) {
	return file_mapped_cloud_api_control_control_proto_rawDescGZIP(), []int{1}
}

func (x *WritePropResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WritePropResponse) GetPayload() *PointReferenceAndResult {
	if x != nil {
		return x.Payload
	}
	return nil
}

type PointReferenceAndValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `point.id` or `point.mappingKey` where the value originated from or is to be written to
	PointReferenceId string `protobuf:"bytes,1,opt,name=point_reference_id,json=pointReferenceId,proto3" json:"point_reference_id,omitempty"`
	// The value read or to be written
	// NOTE: The value *type* must NOT change type between a read and a write
	Value *types.TypedValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PointReferenceAndValue) Reset() {
	*x = PointReferenceAndValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapped_cloud_api_control_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointReferenceAndValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointReferenceAndValue) ProtoMessage() {}

func (x *PointReferenceAndValue) ProtoReflect() protoreflect.Message {
	mi := &file_mapped_cloud_api_control_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointReferenceAndValue.ProtoReflect.Descriptor instead.
func (*PointReferenceAndValue) Descriptor() ([]byte, []int) {
	return file_mapped_cloud_api_control_control_proto_rawDescGZIP(), []int{2}
}

func (x *PointReferenceAndValue) GetPointReferenceId() string {
	if x != nil {
		return x.PointReferenceId
	}
	return ""
}

func (x *PointReferenceAndValue) GetValue() *types.TypedValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type PointReferenceAndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `point.id` or `point.mappingKey` provided to the write request
	PointReferenceId string `protobuf:"bytes,1,opt,name=point_reference_id,json=pointReferenceId,proto3" json:"point_reference_id,omitempty"`
	// The result code
	Result types.ControlResult `protobuf:"varint,2,opt,name=result,proto3,enum=mapped.cloud.types.ControlResult" json:"result,omitempty"`
	// Error description (if available)
	ErrorDescription string `protobuf:"bytes,3,opt,name=error_description,json=errorDescription,proto3" json:"error_description,omitempty"`
	// Protocol-specific error class, for protocols that split class/code - like BACnet
	ConnectorErrorClass int64 `protobuf:"varint,4,opt,name=connector_error_class,json=connectorErrorClass,proto3" json:"connector_error_class,omitempty"`
	// Protocol-specific error code
	ConnectorErrorCode int64 `protobuf:"varint,5,opt,name=connector_error_code,json=connectorErrorCode,proto3" json:"connector_error_code,omitempty"`
}

func (x *PointReferenceAndResult) Reset() {
	*x = PointReferenceAndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapped_cloud_api_control_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointReferenceAndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointReferenceAndResult) ProtoMessage() {}

func (x *PointReferenceAndResult) ProtoReflect() protoreflect.Message {
	mi := &file_mapped_cloud_api_control_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointReferenceAndResult.ProtoReflect.Descriptor instead.
func (*PointReferenceAndResult) Descriptor() ([]byte, []int) {
	return file_mapped_cloud_api_control_control_proto_rawDescGZIP(), []int{3}
}

func (x *PointReferenceAndResult) GetPointReferenceId() string {
	if x != nil {
		return x.PointReferenceId
	}
	return ""
}

func (x *PointReferenceAndResult) GetResult() types.ControlResult {
	if x != nil {
		return x.Result
	}
	return types.ControlResult(0)
}

func (x *PointReferenceAndResult) GetErrorDescription() string {
	if x != nil {
		return x.ErrorDescription
	}
	return ""
}

func (x *PointReferenceAndResult) GetConnectorErrorClass() int64 {
	if x != nil {
		return x.ConnectorErrorClass
	}
	return 0
}

func (x *PointReferenceAndResult) GetConnectorErrorCode() int64 {
	if x != nil {
		return x.ConnectorErrorCode
	}
	return 0
}

var File_mapped_cloud_api_control_control_proto protoreflect.FileDescriptor

var file_mapped_cloud_api_control_control_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x1a, 0x24, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x10, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x7f, 0x0a, 0x11, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7c, 0x0a, 0x16, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x17, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x4d, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x01, 0x5a, 0x20, 0x67, 0x6f, 0x2e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0xaa, 0x02, 0x0e, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mapped_cloud_api_control_control_proto_rawDescOnce sync.Once
	file_mapped_cloud_api_control_control_proto_rawDescData = file_mapped_cloud_api_control_control_proto_rawDesc
)

func file_mapped_cloud_api_control_control_proto_rawDescGZIP() []byte {
	file_mapped_cloud_api_control_control_proto_rawDescOnce.Do(func() {
		file_mapped_cloud_api_control_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_mapped_cloud_api_control_control_proto_rawDescData)
	})
	return file_mapped_cloud_api_control_control_proto_rawDescData
}

var file_mapped_cloud_api_control_control_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mapped_cloud_api_control_control_proto_goTypes = []interface{}{
	(*WritePropRequest)(nil),        // 0: mapped.cloud.api.control.WritePropRequest
	(*WritePropResponse)(nil),       // 1: mapped.cloud.api.control.WritePropResponse
	(*PointReferenceAndValue)(nil),  // 2: mapped.cloud.api.control.PointReferenceAndValue
	(*PointReferenceAndResult)(nil), // 3: mapped.cloud.api.control.PointReferenceAndResult
	(*types.TypedValue)(nil),        // 4: mapped.cloud.types.TypedValue
	(types.ControlResult)(0),        // 5: mapped.cloud.types.ControlResult
}
var file_mapped_cloud_api_control_control_proto_depIdxs = []int32{
	2, // 0: mapped.cloud.api.control.WritePropRequest.payload:type_name -> mapped.cloud.api.control.PointReferenceAndValue
	3, // 1: mapped.cloud.api.control.WritePropResponse.payload:type_name -> mapped.cloud.api.control.PointReferenceAndResult
	4, // 2: mapped.cloud.api.control.PointReferenceAndValue.value:type_name -> mapped.cloud.types.TypedValue
	5, // 3: mapped.cloud.api.control.PointReferenceAndResult.result:type_name -> mapped.cloud.types.ControlResult
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mapped_cloud_api_control_control_proto_init() }
func file_mapped_cloud_api_control_control_proto_init() {
	if File_mapped_cloud_api_control_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mapped_cloud_api_control_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritePropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapped_cloud_api_control_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritePropResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapped_cloud_api_control_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointReferenceAndValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapped_cloud_api_control_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointReferenceAndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapped_cloud_api_control_control_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mapped_cloud_api_control_control_proto_goTypes,
		DependencyIndexes: file_mapped_cloud_api_control_control_proto_depIdxs,
		MessageInfos:      file_mapped_cloud_api_control_control_proto_msgTypes,
	}.Build()
	File_mapped_cloud_api_control_control_proto = out.File
	file_mapped_cloud_api_control_control_proto_rawDesc = nil
	file_mapped_cloud_api_control_control_proto_goTypes = nil
	file_mapped_cloud_api_control_control_proto_depIdxs = nil
}
