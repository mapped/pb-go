// ******************************************************************************************************
// Copyright 2022 Mapped Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ******************************************************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: mapped/cloud/types/heartbeat.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeatbeatCode int32

const (
	HeatbeatCode_HEARTBEAT_CODE_UNSPECIFIED           HeatbeatCode = 0
	HeatbeatCode_HEARTBEAT_CODE_OK                    HeatbeatCode = 1
	HeatbeatCode_HEARTBEAT_CODE_RESOURCE_NOT_FOUND    HeatbeatCode = 400
	HeatbeatCode_HEARTBEAT_CODE_RESOURCE_STALE        HeatbeatCode = 401
	HeatbeatCode_HEARTBEAT_CODE_SERVICE_NOT_REACHABLE HeatbeatCode = 500
)

// Enum value maps for HeatbeatCode.
var (
	HeatbeatCode_name = map[int32]string{
		0:   "HEARTBEAT_CODE_UNSPECIFIED",
		1:   "HEARTBEAT_CODE_OK",
		400: "HEARTBEAT_CODE_RESOURCE_NOT_FOUND",
		401: "HEARTBEAT_CODE_RESOURCE_STALE",
		500: "HEARTBEAT_CODE_SERVICE_NOT_REACHABLE",
	}
	HeatbeatCode_value = map[string]int32{
		"HEARTBEAT_CODE_UNSPECIFIED":           0,
		"HEARTBEAT_CODE_OK":                    1,
		"HEARTBEAT_CODE_RESOURCE_NOT_FOUND":    400,
		"HEARTBEAT_CODE_RESOURCE_STALE":        401,
		"HEARTBEAT_CODE_SERVICE_NOT_REACHABLE": 500,
	}
)

func (x HeatbeatCode) Enum() *HeatbeatCode {
	p := new(HeatbeatCode)
	*p = x
	return p
}

func (x HeatbeatCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeatbeatCode) Descriptor() protoreflect.EnumDescriptor {
	return file_mapped_cloud_types_heartbeat_proto_enumTypes[0].Descriptor()
}

func (HeatbeatCode) Type() protoreflect.EnumType {
	return &file_mapped_cloud_types_heartbeat_proto_enumTypes[0]
}

func (x HeatbeatCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeatbeatCode.Descriptor instead.
func (HeatbeatCode) EnumDescriptor() ([]byte, []int) {
	return file_mapped_cloud_types_heartbeat_proto_rawDescGZIP(), []int{0}
}

var File_mapped_cloud_types_heartbeat_proto protoreflect.FileDescriptor

var file_mapped_cloud_types_heartbeat_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2a, 0xbc, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x48, 0x45, 0x41,
	0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x45, 0x41,
	0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x01,
	0x12, 0x26, 0x0a, 0x21, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x90, 0x03, 0x12, 0x22, 0x0a, 0x1d, 0x48, 0x45, 0x41, 0x52,
	0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x45, 0x10, 0x91, 0x03, 0x12, 0x29, 0x0a, 0x24,
	0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0xf4, 0x03, 0x42, 0x53, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x6f, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x64,
	0x65, 0x76, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0xaa, 0x02, 0x12, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mapped_cloud_types_heartbeat_proto_rawDescOnce sync.Once
	file_mapped_cloud_types_heartbeat_proto_rawDescData = file_mapped_cloud_types_heartbeat_proto_rawDesc
)

func file_mapped_cloud_types_heartbeat_proto_rawDescGZIP() []byte {
	file_mapped_cloud_types_heartbeat_proto_rawDescOnce.Do(func() {
		file_mapped_cloud_types_heartbeat_proto_rawDescData = protoimpl.X.CompressGZIP(file_mapped_cloud_types_heartbeat_proto_rawDescData)
	})
	return file_mapped_cloud_types_heartbeat_proto_rawDescData
}

var file_mapped_cloud_types_heartbeat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mapped_cloud_types_heartbeat_proto_goTypes = []interface{}{
	(HeatbeatCode)(0), // 0: mapped.cloud.types.HeatbeatCode
}
var file_mapped_cloud_types_heartbeat_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mapped_cloud_types_heartbeat_proto_init() }
func file_mapped_cloud_types_heartbeat_proto_init() {
	if File_mapped_cloud_types_heartbeat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapped_cloud_types_heartbeat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mapped_cloud_types_heartbeat_proto_goTypes,
		DependencyIndexes: file_mapped_cloud_types_heartbeat_proto_depIdxs,
		EnumInfos:         file_mapped_cloud_types_heartbeat_proto_enumTypes,
	}.Build()
	File_mapped_cloud_types_heartbeat_proto = out.File
	file_mapped_cloud_types_heartbeat_proto_rawDesc = nil
	file_mapped_cloud_types_heartbeat_proto_goTypes = nil
	file_mapped_cloud_types_heartbeat_proto_depIdxs = nil
}
